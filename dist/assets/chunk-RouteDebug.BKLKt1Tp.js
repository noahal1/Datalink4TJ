import{u as a,n as l,V as e,e as t,g as u,z as s,A as n,w as o,q as i,r as d,v as c,T as r,k as m,$ as _,aa as f,a1 as p,y as v}from"./chunk-vue-core.CxEQweee.js";import{o as g,q as h}from"./entry-index.D92NaooR.js";import{r as y,d as k,N as b,ae as C,ac as R,ad as $,H as w,a4 as j,K as V,af as x,X as z}from"./chunk-vendors.D0_dqILu.js";import"./chunk-chart-core.HkgdsJMe.js";import"./chunk-utils-vendor.DVew6AbD.js";const q={__name:"RouteDebug",setup(q){const A=a(),D=l(),E=y(""),H=y(!1),K=y(null),M=y(!1),N=y(!1),O=y({isRegistered:!1,isRegistering:!1,componentCount:0,availableComponents:[]}),S=[{title:"路径",key:"path",align:"start"},{title:"名称",key:"name",align:"start"},{title:"组件",key:"component",align:"start"},{title:"操作",key:"actions",align:"center",sortable:!1}],T=k((()=>A.getRoutes().map((a=>({path:a.path,name:a.name,component:a.component}))))),U=k((()=>A.getRoutes().length)),W=k((()=>A.getRoutes().filter((a=>a.path.startsWith("/")&&!a.path.includes(":")&&"/:pathMatch(.*)*"!==a.path)).length)),X=k((()=>U.value-W.value)),B=k((()=>Object.keys(g).map((a=>({title:a,value:a}))))),F=a=>a?"function"==typeof a?"懒加载组件":"string"==typeof a?a:"未知类型":"无",G=async()=>{if(E.value){H.value=!0,K.value=null;try{const a=g[E.value];if(!a)throw new Error(`组件 ${E.value} 不存在于映射表中`);await a();K.value={success:!0,message:`组件 ${E.value} 导入成功！`}}catch(a){K.value={success:!1,message:`组件 ${E.value} 导入失败: ${a.message}`}}finally{H.value=!1}}},I=async()=>{M.value=!0;try{await h.registerComponents()&&await J()}catch(a){}finally{M.value=!1}},J=async()=>{N.value=!0;try{O.value=h.getRegistrationStatus()}finally{N.value=!1}};return b((()=>{J()})),(a,l)=>(R(),C(v,null,{default:$((()=>[w(e,null,{default:$((()=>[w(t,null,{default:$((()=>l[1]||(l[1]=[j("路由调试信息")]))),_:1,__:[1]}),w(u,null,{default:$((()=>[w(s,null,{default:$((()=>[w(n,{cols:"12",md:"6"},{default:$((()=>[l[2]||(l[2]=V("h3",null,"当前路由信息",-1)),w(o,{density:"compact"},{default:$((()=>[w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("路径: "+z(a.$route.path),1)])),_:1})])),_:1}),w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("名称: "+z(a.$route.name),1)])),_:1})])),_:1}),w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("匹配的路由: "+z(a.$route.matched.length),1)])),_:1})])),_:1})])),_:1})])),_:1,__:[2]}),w(n,{cols:"12",md:"6"},{default:$((()=>[l[3]||(l[3]=V("h3",null,"路由统计",-1)),w(o,{density:"compact"},{default:$((()=>[w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("总路由数: "+z(U.value),1)])),_:1})])),_:1}),w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("静态路由数: "+z(W.value),1)])),_:1})])),_:1}),w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("动态路由数: "+z(X.value),1)])),_:1})])),_:1})])),_:1})])),_:1,__:[3]})])),_:1}),w(c,{class:"my-4"}),l[8]||(l[8]=V("h3",null,"所有路由列表",-1)),w(r,{headers:S,items:T.value,"items-per-page":10,class:"elevation-1"},{"item.component":$((({item:a})=>{return[w(_,{size:"small",color:(l=a.component,l?"function"==typeof l?"success":"string"==typeof l?"info":"warning":"grey")},{default:$((()=>[j(z(F(a.component)),1)])),_:2},1032,["color"])];var l})),"item.actions":$((({item:e})=>[w(m,{size:"small",variant:"text",color:"primary",disabled:!e.path||e.path===a.$route.path,onClick:a=>{var l;(l=e.path)&&l!==D.path&&A.push(l).catch((a=>{}))}},{default:$((()=>l[4]||(l[4]=[j(" 测试 ")]))),_:2,__:[4]},1032,["disabled","onClick"])])),_:1},8,["items"]),w(c,{class:"my-4"}),l[9]||(l[9]=V("h3",null,"组件注册状态",-1)),w(e,{variant:"outlined",class:"mb-4"},{default:$((()=>[w(u,null,{default:$((()=>[w(s,null,{default:$((()=>[w(n,{cols:"12",md:"6"},{default:$((()=>[w(o,{density:"compact"},{default:$((()=>[w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("注册状态: "+z(O.value.isRegistered?"✅ 已注册":"❌ 未注册"),1)])),_:1})])),_:1}),w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("注册中: "+z(O.value.isRegistering?"🔄 是":"⏸️ 否"),1)])),_:1})])),_:1}),w(i,null,{default:$((()=>[w(d,null,{default:$((()=>[j("前端组件数: "+z(O.value.componentCount),1)])),_:1})])),_:1})])),_:1})])),_:1}),w(n,{cols:"12",md:"6"},{default:$((()=>[w(m,{color:"primary",loading:M.value,class:"mr-2",onClick:I},{default:$((()=>l[5]||(l[5]=[j(" 重新注册组件 ")]))),_:1,__:[5]},8,["loading"]),w(m,{color:"secondary",loading:N.value,onClick:J},{default:$((()=>l[6]||(l[6]=[j(" 刷新状态 ")]))),_:1,__:[6]},8,["loading"])])),_:1})])),_:1})])),_:1})])),_:1}),l[10]||(l[10]=V("h3",null,"组件映射测试",-1)),w(s,null,{default:$((()=>[w(n,{cols:"12",md:"6"},{default:$((()=>[w(f,{modelValue:E.value,"onUpdate:modelValue":l[0]||(l[0]=a=>E.value=a),items:B.value,label:"选择组件进行测试",variant:"outlined",density:"compact"},null,8,["modelValue","items"])])),_:1}),w(n,{cols:"12",md:"6"},{default:$((()=>[w(m,{color:"primary",loading:H.value,disabled:!E.value,onClick:G},{default:$((()=>l[7]||(l[7]=[j(" 测试组件导入 ")]))),_:1,__:[7]},8,["loading","disabled"])])),_:1})])),_:1}),K.value?(R(),C(p,{key:0,type:K.value.success?"success":"error",class:"mt-4"},{default:$((()=>[j(z(K.value.message),1)])),_:1},8,["type"])):x("",!0)])),_:1,__:[8,9,10]})])),_:1})])),_:1}))}};export{q as default};
